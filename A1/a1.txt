Summarize your solution
-----------------------

* What was your approach to solving the assignment?

My approach to this solution was to break down each task that enigma does into
its own function. Solving stepping was basically changing the [starts] list. I
would increment each letter in starts only if the letter to its right matches
the corresponding notch. This function was then used recursively to make sure
each cycle (which was based off each letter in the given string) changes the
previous [starts] list so that it mimics stepping.

To deal with the rotors and encryption, I broke it down to encrypting with one
rotor only and then using that function to recursively encrypt a list of rotors.

* Are there any known bugs in your solution?

No known bugs were found.

Feedback on the assignment
--------------------------

* What was fun about the assignment?

Figuring out how enigma worked to the point where I can code it.

* What did you find especially hard?

Initially understanding how engima worked as a machine.

* How could the assignment be made more valuable?

If it was given after the lecture on maps, compare, and folds. In this manner,
we could have time to implement the functions using folds rather than
using match ___ with

Karma
-----

* What, if any, karma functionality did you implement?

none

* How can the grader access that functionality and test it?

N/A